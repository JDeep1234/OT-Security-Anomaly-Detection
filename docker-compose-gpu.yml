version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ot-security-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-icsuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-icspassword}
      - POSTGRES_DB=${POSTGRES_DB:-ics_security}
    ports:
      - "5432:5432"
    networks:
      - ot-security-network
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-icsuser} -d ${POSTGRES_DB:-ics_security}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for real-time messaging
  redis:
    image: redis:7-alpine
    container_name: ot-security-redis
    ports:
      - "6379:6379"
    networks:
      - ot-security-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service with GPU support
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.gpu
    container_name: ot-security-backend
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - DATABASE_URL=${DATABASE_URL:-postgresql://icsuser:icspassword@postgres:5432/ics_security}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - GOOGLE_GEMINI_API_KEY=${GOOGLE_GEMINI_API_KEY:-AIzaSyC-eF8ERBW2Qqa-rTxM5RECrEIrGk7HXkU}
      - DATASET_PATH=${DATASET_PATH:-/app/trained_models/balanced_subset.csv}
    networks:
      - ot-security-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    volumes:
      - ./simple_api.py:/app/simple_api.py
      - ./trained_models:/app/trained_models
      - ./backend/services/realtime_simulation_service.py:/app/services/realtime_simulation_service.py
      - ./backend/services/realtime_api.py:/app/services/realtime_api.py
    # Note: GPU support disabled for macOS compatibility
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ot-security-frontend
    ports:
      - "3000:80"
    networks:
      - ot-security-network
    depends_on:
      - backend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000

networks:
  ot-security-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local 